#include<iostream>
#include<stdlib.h>
#include<math.h>
#include<iomanip>

#define MAX 3
#define stred 2
#define zac 0

using namespace std;

typedef struct
{
    double x,y;

} Tibo;

double LagrangeInterpol(Tibo *data, int n,double x)
{
    double lag,lag_pol=0;
    int j,i;
    for(j=0; j<n; j++)
    {
        lag=1.0;
        for(i=0; i<n; i++)
        {
            if(i==j) continue;
            lag*=(x-data[i].x) / (data[j].x-data[i].x) ;
        }
        lag_pol+= data[j].y*lag;
    }
    return lag_pol;
}

double integral(double (*f)(Tibo*,int,double), Tibo *body, int del)
{
    double vys = 0;
    double a=body[zac].x;
    double b=body[stred].x;
    double h=(b-a)/del;
    for(double x=a+h; x<b-h ; x+=h)
    {
        vys += f(body,3,x);
    }
    vys += ( f(body,3,a) + f(body,3,b) )/2;
    return vys*h;
}

int main()
{
    int n;
    Tibo body[MAX];
    for (int i=0;i<MAX;i++)
    {
      cin>>body[i].x>>body[i].y;
    }
    cin>>n;
    cout<<fixed;
    cout<<setprecision(3);
    cout<<integral(LagrangeInterpol,body,n);
    return 0;
}